GMAIL_PASS = "PhANTUM#4200"
GMAIL_ID= "b122041@iiit-bh.ac.in"
REACT_APP_SERVICE_ID="service_j71y8ty"
REACT_APP_TEMPLATE_ID ="template_eq70smz"
REACT_APP_PUBLIC_KEY= "WUw3_gjG--2-IjpQ3"

# const getCoachBookingInvoice = async (userId, coachID, schoolId) => {
#   try {
#     //     const booking = await Booking.findById(bookingId).populate("userId");
#     //     if (!booking || !booking.users || booking.users.length === 0) {
#     //       return res.status(404).json({
#     //         success: false,
#     //         message: "Booking or user details not found",
#     //       });
#     //     }

#     const user = User.findById(userId).populate();
#     if (!user) {
#       return { success: false, message: "User not found" };
#     }
#     const coach = await User.findById(coachId);
#     console.log("Coach Details:", coach);
#     const coachAvailability = await Coachavailibility.findOne({
#       coachId,
#       schoolId,
#     });
#     const totalEarning = coach.coachSubscriptionprice;
#     const gstDeducted = totalEarning * 0.18;
#     const subTotal = totalEarning - gstDeducted;

#     const invoice = {
#       gstNumber: "07AAWFD2139Q1ZL",
#       contact: "+91-9999999999",
#       email: "support@itsmycourt.com",
#       address: groundData.location,
#       schoolName: groundData.institutionName,
#       clientName: `${user.firstName} ${user.lastName}`,
#       clientPhone: `+91-${user.phoneNumber}`,
#       invoiceDate: booking.date,
#       invoiceNumber: "12345", // You may want to generate a unique invoice number
#       description: groundData.sport_name,
#       pricePerHour: booking.totalPrice,
#       subTotal: subTotal,
#       gst: gstDeducted,
#       total: totalEarning,
#       manager: "Rohit Malhotra",
#       slotTime: `${booking.startTime} - ${booking.endTime}`,
#     };

#     const templatePath = path.join(__dirname, "../public/ejs/invoice.ejs");
#     const html = await ejs.renderFile(templatePath, { invoice });
#     console.log(html); // Check the rendered HTML
#     const pdfUrl = await generatePDFAndUpload(
#       html,
#       `booking_invoice_${invoice.clientName}`
#     );
#     // Launch a headless browser
#     console.log("pdf url is", pdfUrl);
#     return pdfUrl;
#   } catch (error) {
#     console.error(error.message);
#     return { success: false, message: "Server error" };
#   }
# };

# // // invoice for the coach page
